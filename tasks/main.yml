---
# tasks file for ansible-role-profile

- name: "Include OS-specific variables"
  include_vars: "{{ ansible_os_family }}.yaml"

#- name: "Gather the package facts"
#  ansible.builtin.package_facts:
#    manager: auto
#  when: ansible_facts.packages is not defined

- name: "Configure bashrc configuration file"
  ansible.builtin.lineinfile:
    dest: "{{ bashrc }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    backup: yes
  with_items:
    - regexp: ^[\s]*umask.*\b.*$
      line: "       umask {{ umask }}"
  when: ansible_facts['os_family'] == 'RedHat'

- name: "Configure profile configuration file"
  ansible.builtin.lineinfile:
    dest: "{{ profile }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    backup: yes
  with_items:
    - regexp: ^[\s]*umask.*\b.*$
      line: "    umask {{ umask }}"
  when: ansible_facts['os_family'] == 'RedHat'

- name: "Configure login.defs configuration file (Debian)"
  ansible.builtin.lineinfile:
    dest: "{{ login_defs }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    backup: yes
  with_items:
    - regexp: ^[\s]*UMASK.*\b.*$
      line: "UMASK           {{ umask }}"
    - regexp: ^[\s]*HOME_MODE.*\b.*$
      line: "HOME_MODE       0750"
  when: ansible_facts['os_family'] == 'Debian'

- name: "Check if cshrc configuration file already exist (Debian)"
  ansible.builtin.stat:
    path: "{{ cshrc }}"
  register: cshrc_config
  when: ansible_facts['os_family'] == 'Debian'

- name: "Configure cshrc configuration file (Debian)"
  ansible.builtin.lineinfile:
    dest: "{{ cshrc }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    backup: yes
  with_items:
    - regexp: ^[\s]*umask.*\b.*$
      line: "UMASK           {{ umask }}"
  when:
    - ansible_facts['os_family'] == 'Debian'
    - cshrc_config.stat.exists == True

- name: "Deploy cshrc configuration file (Debian)"
  ansible.builtin.template:
    src: cshrc.j2
    dest: "{{ cshrc }}"
    owner: root
    group: root
    mode: '0644'
  when:
    - ansible_facts['os_family'] == 'Debian'
    - cshrc_config.stat.exists == False

- name: "Configure idle session termination configuration file (Debian)"
  ansible.builtin.template:
    src: timeout.j2
    dest: "/etc/profile.d/tmout.sh"
    owner: root
    group: root
    mode: '0644'
  when: ansible_facts['os_family'] == 'Debian'

- name: "Configure default permissions for users home directories (Debian)"
  ansible.builtin.lineinfile:
    dest: "{{ adduser_conf }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    backup: yes
  with_items:
    - regexp: ^[\s]*DIR_MODE.*\b.*$
      line: "DIR_MODE={{ dirmode }}"
  when: ansible_facts['os_family'] == 'Debian'
